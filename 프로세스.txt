# 로컬루언서 미나 - 개발 프로세스 및 현황

## 1. 초기 기획 및 디자인 (완료)
  - AI 인플루언서 '미나' 컨셉 정의 (경주 로컬루언서).
  - 주요 타겟 사용자 및 핵심 기능 정의.
  - 초기 디자인 컨셉 및 컬러 팔레트 설정 (AIRA 스타일 참고 및 수정).
  - 메뉴 구조 설계 (소개, 브이로그, 가상여행, AI가이드, 사진엽서, Q&A, 쇼핑, SNS).

## 2. 기본 프레임워크 및 UI 구성 (완료)
  - Next.js (App Router) 프로젝트 생성.
  - Tailwind CSS 및 shadcn/ui 설정.
  - 기본 레이아웃 (헤더, 푸터, 테마 프로바이더) 구현.
  - 라이트/다크 모드 기능 구현.
  - 초기 페이지 (홈, 가상여행, AI가이드, 사진엽서) 생성 및 기본 콘텐츠 배치.
  - 미나 이미지 에셋 추가 및 활용.

## 3. 핵심 기능 개발 (진행 중)

  ### 3.1. 콘텐츠 페이지 (완료된 부분)
    - **홈페이지 (`app/page.tsx`)**: 히어로 섹션 (이미지 슬라이더 포함), 미나 소개, 주요 기능 카드, 콘텐츠 티저.
    - **브이로그 페이지 (`app/vlogs/page.tsx`)**: 목업 데이터 기반 브이로그 카드 목록.
    - **쇼핑 페이지 (`app/shop/page.tsx`)**: 목업 데이터 기반 상품 카드 목록.
    - **가상여행 페이지 (`app/virtual-travel/page.tsx`)**: Spatial.io 임베드 예시 (탭 UI).
    - **AI 가이드 페이지 (`app/ai-guide/page.tsx`)**: 기능 소개 및 목업 UI.
    - **사진엽서 페이지 (`app/photo-postcard/page.tsx`)**: 사진 업로드, 관광지 선택, AI 생성 목업 기능.
    - **Q&A 페이지 (`app/qa/page.tsx`)**: 질문 등록 폼, Supabase 연동 (질문 저장, AI 답변 생성 - OpenAI), 목록 표시.
    - **SNS 피드 페이지 (`app/sns/*`)**: YouTube, Instagram, X, Blogspot, News 각 채널별 목업 콘텐츠 페이지 및 레이아웃.

  ### 3.2. 사용자 인증 (완료)
    - Supabase Auth 연동.
    - 회원가입 (`app/auth/signup/page.tsx`) 및 로그인 (`app/auth/login/page.tsx`) 폼 및 기능 구현.
    - AuthProvider (`components/auth/auth-provider.tsx`) 및 UserMenu (`components/auth/user-menu.tsx`) 구현.
    - 사용자 프로필 DB 테이블 생성 및 AuthProvider에서 초기 프로필 생성 로직 추가.

  ### 3.3. 관리자 기능 (부분 완료 및 진행 중)
    - **관리자 레이아웃 (`app/admin/layout.tsx`)**: 사이드바, 헤더, 접근 권한 제어 (useAuth).
    - **대시보드 (`app/admin/page.tsx`)**: 목업 데이터 기반 통계 및 활동 현황 UI.
    - **페르소나 설정 (`app/admin/persona/page.tsx`)**: UI 구현, 상태 관리. API 연동 (`/api/admin/persona`)을 통해 Supabase DB와 데이터 송수신.
    - **콘텐츠 생성기 (`app/admin/content-generator/page.tsx`)**: UI 구현, 목업 AI 콘텐츠 생성 로직.
    - **콘텐츠 달력 (`app/admin/content-calendar/page.tsx`)**: UI 구현, 목업 데이터 기반 달력 및 목록.
    - **시스템 설정 (`app/admin/settings/page.tsx`)**: UI 구현, 목업 데이터.

  ### 3.4. 데이터베이스 (완료)
    - Supabase 프로젝트 설정 및 연동.
    - 테이블 스키마 정의 (`scripts/database-setup.sql`): users, vlogs, qas, products, orders, order_items, persona_settings, content_calendar, comments.
    - RLS 정책 기본 설정.
    - 초기 데이터 시딩 (`scripts/seed-data.sql`): 관리자 계정, 기본 페르소나, 샘플 콘텐츠.
    - Supabase 클라이언트 분리 (`lib/supabase/client.ts`, `lib/supabase/server.ts`).

  ### 3.5. API 개발 (부분 완료)
    - Q&A API (`app/api/qna/route.ts`): GET (목록 조회), POST (질문 등록 및 AI 답변 생성).
    - 페르소나 API (`app/api/admin/persona/route.ts`): GET (활성 페르소나 조회), POST (페르소나 저장).

## 4. 향후 개발 계획 (예정)
  - **콘텐츠 상세 페이지**: 브이로그, 상품 등 상세 정보 페이지 구현.
  - **AI 기능 고도화**:
    - 사진엽서 실제 AI 이미지 합성 연동.
    - AI 가이드 실시간 채팅 (음성/화상) 기능 구현.
    - 콘텐츠 생성기 실제 OpenAI 연동 및 페르소나 기반 생성 로직 강화.
  - **관리자 기능 강화**:
    - Q&A 관리, 쇼핑몰 관리, 분석 리포트 페이지 실제 기능 구현 및 DB 연동.
    - 콘텐츠 달력 기능 DB 연동 및 예약 발행 기능.
    - 시스템 설정 실제 환경 변수 연동.
  - **사용자 프로필 및 설정**: 사용자 정보 수정, 활동 내역 등 페이지 구현.
  - **알림 시스템**: 새로운 콘텐츠, Q&A 답변 등 알림 기능 (구현 예정).
  - **소셜 로그인**: Google, Kakao 등 소셜 로그인 옵션 추가 (구현 예정).
  - **최적화 및 테스트**: 성능 최적화, 반응형 테스트, 버그 수정.
  - **배포 및 운영**: Vercel 배포, 지속적인 모니터링 및 업데이트.

## 5. 주요 이슈 및 해결 과정
  - **JSX 내 특수문자 오류**: `>` 문자열 처리를 위해 `{'>'}` 또는 `&gt;` 대신 `{"문자열"}` 형태로 수정. (완료)
  - **Supabase Service Role Key 클라이언트 노출 오류**: `lib/supabase.ts`를 `lib/supabase/client.ts`와 `lib/supabase/server.ts`로 분리하여 해결. (완료)
